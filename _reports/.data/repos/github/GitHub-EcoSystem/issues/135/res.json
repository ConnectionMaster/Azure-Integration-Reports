{
  "status": 200,
  "url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135?per_page=100",
  "headers": {
    "access-control-allow-origin": "*",
    "access-control-expose-headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset",
    "cache-control": "private, max-age=60, s-maxage=60",
    "connection": "close",
    "content-encoding": "gzip",
    "content-security-policy": "default-src 'none'",
    "content-type": "application/json; charset=utf-8",
    "date": "Wed, 30 Sep 2020 10:59:05 GMT",
    "etag": "W/\"58bd52a654dfef2b4be7d85b6241c3bf0d80629a12fdf547f2c74761ec26a418\"",
    "last-modified": "Thu, 24 Sep 2020 07:00:10 GMT",
    "referrer-policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
    "server": "GitHub.com",
    "status": "200 OK",
    "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
    "transfer-encoding": "chunked",
    "vary": "Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding, Accept, X-Requested-With",
    "x-accepted-oauth-scopes": "repo",
    "x-content-type-options": "nosniff",
    "x-frame-options": "deny",
    "x-github-media-type": "github.squirrel-girl-preview; format=json, github.inertia-preview; format=json, github.starfox-preview; format=json, github.mockingbird-preview; param=sailor-v-preview; format=json",
    "x-github-request-id": "07D9:6764:48C793:CABCCC:5F7464F9",
    "x-oauth-scopes": "admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, gist, repo, user, workflow, write:discussion, write:packages",
    "x-ratelimit-limit": "5000",
    "x-ratelimit-remaining": "3789",
    "x-ratelimit-reset": "1601465977",
    "x-ratelimit-used": "1211",
    "x-xss-protection": "1; mode=block"
  },
  "data": {
    "url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135",
    "repository_url": "https://api.github.com/repos/github/GitHub-EcoSystem",
    "labels_url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135/labels{/name}",
    "comments_url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135/comments",
    "events_url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135/events",
    "html_url": "https://github.com/github/GitHub-EcoSystem/issues/135",
    "id": 635352242,
    "node_id": "MDU6SXNzdWU2MzUzNTIyNDI=",
    "number": 135,
    "title": "GitHub Actions for Postgres SQL Database",
    "user": {
      "login": "azooinmyluggage",
      "id": 6857119,
      "node_id": "MDQ6VXNlcjY4NTcxMTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6857119?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azooinmyluggage",
      "html_url": "https://github.com/azooinmyluggage",
      "followers_url": "https://api.github.com/users/azooinmyluggage/followers",
      "following_url": "https://api.github.com/users/azooinmyluggage/following{/other_user}",
      "gists_url": "https://api.github.com/users/azooinmyluggage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azooinmyluggage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azooinmyluggage/subscriptions",
      "organizations_url": "https://api.github.com/users/azooinmyluggage/orgs",
      "repos_url": "https://api.github.com/users/azooinmyluggage/repos",
      "events_url": "https://api.github.com/users/azooinmyluggage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azooinmyluggage/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 2080405513,
        "node_id": "MDU6TGFiZWwyMDgwNDA1NTEz",
        "url": "https://api.github.com/repos/github/GitHub-EcoSystem/labels/Epic",
        "name": "Epic",
        "color": "654bcc",
        "default": false,
        "description": ""
      },
      {
        "id": 2210676808,
        "node_id": "MDU6TGFiZWwyMjEwNjc2ODA4",
        "url": "https://api.github.com/repos/github/GitHub-EcoSystem/labels/Team:%20Environment",
        "name": "Team: Environment",
        "color": "f7bab9",
        "default": false,
        "description": "Environment Crew"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "N-Usha",
      "id": 25389593,
      "node_id": "MDQ6VXNlcjI1Mzg5NTkz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/25389593?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/N-Usha",
      "html_url": "https://github.com/N-Usha",
      "followers_url": "https://api.github.com/users/N-Usha/followers",
      "following_url": "https://api.github.com/users/N-Usha/following{/other_user}",
      "gists_url": "https://api.github.com/users/N-Usha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/N-Usha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/N-Usha/subscriptions",
      "organizations_url": "https://api.github.com/users/N-Usha/orgs",
      "repos_url": "https://api.github.com/users/N-Usha/repos",
      "events_url": "https://api.github.com/users/N-Usha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/N-Usha/received_events",
      "type": "User",
      "site_admin": true
    },
    "assignees": [
      {
        "login": "N-Usha",
        "id": 25389593,
        "node_id": "MDQ6VXNlcjI1Mzg5NTkz",
        "avatar_url": "https://avatars2.githubusercontent.com/u/25389593?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/N-Usha",
        "html_url": "https://github.com/N-Usha",
        "followers_url": "https://api.github.com/users/N-Usha/followers",
        "following_url": "https://api.github.com/users/N-Usha/following{/other_user}",
        "gists_url": "https://api.github.com/users/N-Usha/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/N-Usha/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/N-Usha/subscriptions",
        "organizations_url": "https://api.github.com/users/N-Usha/orgs",
        "repos_url": "https://api.github.com/users/N-Usha/repos",
        "events_url": "https://api.github.com/users/N-Usha/events{/privacy}",
        "received_events_url": "https://api.github.com/users/N-Usha/received_events",
        "type": "User",
        "site_admin": true
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2020-06-09T11:35:23Z",
    "updated_at": "2020-08-27T04:58:44Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "We want to provide a simple, yet powerful way to deploy database updates  to Azure SQL, MYSQL and PostGres databases by using GitHub actions. We currently have actions for SQL & MYSQL DBs. This Epic is to track the efforts for authoring a new action for PostGres. And also to track the enhancements needed for SQL & MYSQL actions.\r\n\r\n- [x] GH Action for Postgres SQL #81\r\nCurrently GH Actions include a few community authored actions for Postgres: https://github.com/marketplace?query=postgres. However we believe that none of these are comprehensive enough to help an Azure customer targeting to update an existing Azure PostgreSQL DB, manually dealing with all the firewall rules. By updates, we are targeting any DB updates that can be accomplished by running PLSQL scripts, which could be schema changes or data modifications.\r\nWithout this action, users would need to ensure that GH Actions runner has access to the Azure PostgreSQL DB which might need them to add the IP/range of the runners to the firewall rules.\r\nHowever the action would solve this seamlessly by auto detecting the presence of any blocking rules and automatically handling the same. If firewall rules are already adjusted by the user, then this would be a no-op and we would just run the PLSQL scripts provided. \r\nFor hosted runners which are usually Azure VMs, users could handle the firewall rules by enabling the option on the postGres DB in Azure portal to allow any Azure VMs in the tenant to have access to the DB. But for self-hosted runners, users would have to run some PS or CLI scripts to accomplish this. \r\n\r\n## EPD\r\n\r\nEngineering: @nadesu \r\nProduct:  @N-Usha \r\nDesign: N/A",
    "closed_by": null,
    "reactions": {
      "url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/github/GitHub-EcoSystem/issues/135/timeline",
    "performed_via_github_app": null
  }
}